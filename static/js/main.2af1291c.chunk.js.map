{"version":3,"sources":["components/header/Header.tsx","components/layout/Layout.tsx","pages/posts/Posts.tsx","pages/404/PageNotFound.tsx","components/singlePost/SinglePost.tsx","components/buttons/Button.tsx","pages/post/Post.tsx","pages/users/Users.tsx","pages/user/User.tsx","pages/userPosts/UserPosts.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","to","isActive","Layout","Posts","posts","map","post","id","title","PageNotFound","SinglePost","body","Button","clickHandler","onClick","Post","useParams","navigate","useNavigate","postData","find","userId","Users","useState","inputValue","setInputValue","useSearchParams","searchParams","setSearchParams","user","get","onSubmit","event","preventDefault","type","value","onChange","target","users","item","name","filter","toLowerCase","includes","User","userData","address","company","email","phone","username","website","street","suite","city","zipcode","UserPosts","App","path","element","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2af1291c.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => (\n  <div className=\"header\">\n    <nav className=\"header__navigation\">\n      <NavLink\n        to=\"/users\"\n        className={({ isActive }) => (isActive ? 'navigation navigation--active' : 'navigation')}\n      >\n        Users\n      </NavLink>\n      <NavLink\n        to=\"/posts\"\n        className={({ isActive }) => (isActive ? 'navigation navigation--active' : 'navigation')}\n      >\n        Posts\n      </NavLink>\n    </nav>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport Header from '../header/Header';\n\nconst Layout = () => (\n  <>\n    <div className=\"content-wrapper\">\n      <Header />\n    </div>\n    <Outlet />\n  </>\n);\n\nexport default Layout;\n","import React from 'react';\nimport './Posts.scss';\nimport { Link } from 'react-router-dom';\nimport posts from '../../data/posts.json';\n\nconst Posts = () => (\n  <section className=\"posts-wrapper\">\n    <div className=\"posts\">\n      <table className=\"result-table\">\n        <tr>\n          <th>Post ID</th>\n          <th>Post Title</th>\n        </tr>\n        {\n          posts.map((post) => (\n            <tr key={post.id}>\n              <td>\n                <Link to={`${post.id}`}>\n                  {post.id}\n                </Link>\n              </td>\n              <td>\n                <Link to={`${post.id}`}>\n                  {post.title}\n                </Link>\n              </td>\n            </tr>\n          ))\n        }\n      </table>\n    </div>\n  </section>\n);\n\nexport default Posts;\n","import React from 'react';\n\nconst PageNotFound = () => (\n  <h1>This page doesn&apos;t exist! :(</h1>\n);\n\nexport default PageNotFound;\n","import React, { FC } from 'react';\nimport './SinglePost.scss';\n\ninterface SinglePostProps {\n  title: string;\n  id: string;\n  body: string;\n}\n\nconst SinglePost:FC<SinglePostProps> = ({ title, id, body }) => (\n  <div className=\"post\">\n    <h2 className=\"post__title\">{title}</h2>\n    <h5 className=\"post__userid\">{id}</h5>\n    <p className=\"post__content\">{body}</p>\n  </div>\n);\n\nexport default SinglePost;\n","import React, { FC } from 'react';\nimport './Button.scss';\n\ninterface ButtonProps {\n  title: string;\n  clickHandler: () => void;\n}\n\nconst Button:FC<ButtonProps> = ({ title, clickHandler }) => (\n  <button className=\"button\" onClick={clickHandler}>\n    {title}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport './Post.scss';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport posts from '../../data/posts.json';\nimport PageNotFound from '../404/PageNotFound';\nimport SinglePost from '../../components/singlePost/SinglePost';\nimport Button from '../../components/buttons/Button';\n\nconst Post = () => {\n  const { id } = useParams<'id'>();\n  const navigate = useNavigate();\n\n  if (!id) {\n    return null;\n  }\n\n  const postData = posts.find((post) => post.id === +id);\n\n  if (!postData) {\n    return <PageNotFound />;\n  }\n\n  const { title, body, userId } = postData;\n\n  return (\n    <section className=\"post-wrapper\">\n      <SinglePost title={title} id={`UserID: ${userId}`} body={body} />\n      <Button title=\"Go Back\" clickHandler={() => navigate(-1)} />\n    </section>\n  );\n};\n\nexport default Post;\n","import React, { useState } from 'react';\nimport './Users.scss';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport users from '../../data/users.json';\n\nconst Users = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const user = searchParams.get('user');\n\n  const showAllUsers = () => (\n    users.map((item) => (\n      <tr key={item.id}>\n        <td>\n          <Link to={`${item.id}`}>\n            {item.id}\n          </Link>\n        </td>\n        <td>\n          <Link to={`${item.id}`}>\n            {item.name}\n          </Link>\n        </td>\n      </tr>\n    ))\n  );\n\n  const showFilteredUsers = () => (\n    users\n      .filter((value) => value.name.toLowerCase().includes(user!.toLowerCase()))\n      .map((item) => (\n        <tr key={item.id}>\n          <td>\n            <Link to={`${item.id}`}>\n              {item.id}\n            </Link>\n          </td>\n          <td>\n            <Link to={`${item.id}`}>\n              {item.name}\n            </Link>\n          </td>\n        </tr>\n      ))\n  );\n\n  return (\n    <section className=\"users-wrapper\">\n      <div>\n        <form onSubmit={(event) => {\n          event.preventDefault();\n          setSearchParams({ user: inputValue });\n        }}\n        >\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={(event) => setInputValue(event.target.value)}\n          />\n          <button type=\"submit\">Search Users</button>\n        </form>\n      </div>\n      <div className=\"users\">\n        <table className=\"result-table\">\n          <tr>\n            <th>User ID</th>\n            <th>Name</th>\n          </tr>\n          {\n            user === null\n              ? (showAllUsers())\n              : (showFilteredUsers())\n          }\n        </table>\n      </div>\n    </section>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport './User.scss';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport users from '../../data/users.json';\nimport PageNotFound from '../404/PageNotFound';\nimport Button from '../../components/buttons/Button';\n\nconst User = () => {\n  const { id } = useParams<'id'>();\n  const navigate = useNavigate();\n\n  if (!id) {\n    return null;\n  }\n\n  const userData = users.find((user) => user.id === +id);\n\n  if (!userData) {\n    return <PageNotFound />;\n  }\n\n  const {\n    name, address, company, email, phone, username, website,\n  } = userData;\n\n  return (\n    <section className=\"user-wrapper\">\n      <div className=\"user\">\n        <table className=\"user__table\">\n          <tr>\n            <th>Name</th>\n            <td>{name}</td>\n          </tr>\n          <tr>\n            <th>Username</th>\n            <td>{username}</td>\n          </tr>\n          <tr>\n            <th>Email</th>\n            <td>{email}</td>\n          </tr>\n          <tr>\n            <th>Address</th>\n            <td>\n              {address.street}\n              {', '}\n              {address.suite}\n              {', '}\n              {address.city}\n              {', '}\n              {address.zipcode}\n            </td>\n          </tr>\n          <tr>\n            <th>Phone</th>\n            <td>{phone}</td>\n          </tr>\n          <tr>\n            <th>Website</th>\n            <td>{website}</td>\n          </tr>\n          <tr>\n            <th>Company</th>\n            <td>{company.name}</td>\n          </tr>\n        </table>\n      </div>\n      <div className=\"user__buttons-wrapper\">\n        <Button title=\"Go Back\" clickHandler={() => navigate(-1)} />\n        <Button title=\"See Blog Posts\" clickHandler={() => navigate('posts')} />\n      </div>\n    </section>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport './UserPosts.scss';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport posts from '../../data/posts.json';\nimport PageNotFound from '../404/PageNotFound';\nimport SinglePost from '../../components/singlePost/SinglePost';\nimport Button from '../../components/buttons/Button';\n\nconst UserPosts = () => {\n  const { id } = useParams<'id'>();\n  const navigate = useNavigate();\n\n  if (!id) {\n    return null;\n  }\n\n  const postData = posts.filter((post) => post.userId === +id);\n\n  if (!postData) {\n    return <PageNotFound />;\n  }\n\n  return (\n    <div className=\"post-wrapper\">\n      <section className=\"user-posts\">\n        <div className=\"user-posts__post-wrapper\">\n          {\n            postData.map((post) => (\n              <SinglePost title={post.title} id={`PostID: ${post.id}`} body={post.body} />\n            ))\n          }\n        </div>\n      </section>\n      <Button title=\"Go Back\" clickHandler={() => navigate(-1)} />\n    </div>\n  );\n};\n\nexport default UserPosts;\n","import React from 'react';\nimport './App.scss';\nimport {\n  BrowserRouter, HashRouter, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport Layout from './components/layout/Layout';\nimport Posts from './pages/posts/Posts';\nimport Post from './pages/post/Post';\nimport PageNotFound from './pages/404/PageNotFound';\nimport Users from './pages/users/Users';\nimport User from './pages/user/User';\nimport UserPosts from './pages/userPosts/UserPosts';\n\nconst App = () => (\n  // Change to BrowserRouter for normal workflow\n  <HashRouter>\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<Navigate to=\"users\" />} />\n          <Route path=\"users\" element={<Users />} />\n          <Route path=\"users/:id\" element={<User />} />\n          <Route path=\"users/:id/posts\" element={<UserPosts />} />\n          <Route path=\"posts\" element={<Posts />} />\n          <Route path=\"posts/:id\" element={<Post />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Route>\n      </Routes>\n    </div>\n  </HashRouter>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}